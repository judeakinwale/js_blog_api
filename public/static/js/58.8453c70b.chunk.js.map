{"version":3,"file":"static/js/58.8453c70b.chunk.js","mappings":"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","sources":["layout/Private.js","modules/Admin/Category/index.js"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { Header, Navbar } from \"../containers\";\r\nimport { AuthContext } from \"../context\";\r\n\r\nconst PrivateLayout = ({\r\n  children,\r\n  name,\r\n  role = \"Admin\",\r\n  pageTitle,\r\n  remove = false,\r\n}) => {\r\n  const { user } = useContext(AuthContext);\r\n  return (\r\n    <div className=\"appContainer\">\r\n      <Navbar name={name} role={user?.role} />\r\n      <div className=\"contentsRight\">\r\n        <ToastContainer />\r\n        <Header title={pageTitle} user={user} />\r\n        <div className={remove ? \"removePadding\" : \"contents\"}>{children}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrivateLayout;\r\n","import React, { useState } from \"react\";\r\nimport PrivateLayout from \"../../../layout/Private\";\r\nimport { hooks } from \"../../../hooks\";\r\nimport {\r\n  Button,\r\n  FormGroup,\r\n  ImageUpload,\r\n  Input,\r\n  Modal,\r\n  Table,\r\n} from \"../../../containers\";\r\nimport swal from \"sweetalert\";\r\nimport { useIsMutating } from \"@tanstack/react-query\";\r\nimport { errorAlert, successAlert } from \"../../../utils\";\r\n\r\nconst Category = () => {\r\n  const isLoading = useIsMutating();\r\n  const [open, setOpen] = useState(false);\r\n  const [edit, setEdit] = useState(false);\r\n  const [formData, setFormData] = useState({});\r\n  const [errors, setErrors] = useState({});\r\n  const Columns = [{ title: \"Title\", field: \"title\" }];\r\n\r\n  const handleChange = (name, value) => {\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const validationHandler = (name, error) => {\r\n    setErrors({ ...errors, [name]: error });\r\n  };\r\n\r\n  const data = hooks.useCategory();\r\n  const { mutate, reset, isSuccess, isError, error } = hooks.useAddCategory();\r\n  const {\r\n    mutate: update,\r\n    reset: resetUpdate,\r\n    isSuccess: isSuccessUpdate,\r\n    isError: isUpdateError,\r\n    error: errorUpdate,\r\n  } = hooks.useUpdateCategory();\r\n  const {\r\n    mutate: remove,\r\n    reset: resetError,\r\n    isSuccess: isSuccessError,\r\n    isError: isDeleteError,\r\n    error: errorDelete,\r\n  } = hooks.useDeleteCategory();\r\n\r\n  const submitHandler = () => {\r\n    mutate(formData);\r\n  };\r\n  if (isSuccess) {\r\n    reset();\r\n    setOpen(false);\r\n    successAlert(\"Created Successfully\");\r\n  }\r\n  if (isError) {\r\n    reset();\r\n    errorAlert(error);\r\n  }\r\n  if (isSuccessUpdate) {\r\n    resetUpdate();\r\n    setOpen(false);\r\n    successAlert(\"Updated Successfully\");\r\n  }\r\n  if (isUpdateError) {\r\n    resetUpdate();\r\n    errorAlert(errorUpdate);\r\n  }\r\n  if (isSuccessError) {\r\n    resetError();\r\n    successAlert(\"Deleted Successfully\");\r\n  }\r\n  if (isDeleteError) {\r\n    resetError();\r\n    errorAlert(errorDelete);\r\n  }\r\n  const updateHandler = () => {\r\n    update(formData);\r\n  };\r\n\r\n  const openHandler = () => {\r\n    setOpen(true);\r\n    setFormData(\"\");\r\n    setEdit(false);\r\n  };\r\n  const closeHandler = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const actions = (item) => [\r\n    {\r\n      name: \"Edit\",\r\n      onClick: (res) => {\r\n        setFormData(res);\r\n        setOpen(true);\r\n        setEdit(true);\r\n      },\r\n    },\r\n    {\r\n      name: \"Delete\",\r\n      onClick: (res) => {\r\n        swal({\r\n          title: \"Are you sure?\",\r\n          text: \"Once deleted, you will not be able to recover this\",\r\n          icon: \"warning\",\r\n          buttons: [\"No\", \"Yes\"],\r\n          dangerMode: true,\r\n        }).then((willDelete) => {\r\n          if (willDelete) {\r\n            remove(res._id);\r\n          }\r\n        });\r\n      },\r\n    },\r\n  ];\r\n\r\n  const fileChange = (name, files) => {\r\n    let file = \"\";\r\n    let pix = [];\r\n    for (var i = 0; i < files?.length; i++) {\r\n      file = files[i];\r\n      const objectUrl = URL.createObjectURL(files[i]);\r\n      pix = objectUrl;\r\n    }\r\n\r\n    setFormData({ ...formData, [name]: file });\r\n    // setPictures(pix);\r\n  };\r\n\r\n  return (\r\n    <PrivateLayout name=\"Product Categories\" pageTitle=\"Category\">\r\n      <div className=\"bgWhite\">\r\n        <div className=\"btnContainer right\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btnSuccess shadowBtn\"\r\n            onClick={openHandler}\r\n          >\r\n            Add Category\r\n          </button>\r\n        </div>\r\n        <Table columns={Columns} data={data} actions={actions} />\r\n        <Modal\r\n          isVisible={open}\r\n          title={edit ? \"Edit Category\" : \"Create Category\"}\r\n          size=\"md\"\r\n          content={\r\n            <FormGroup\r\n              onSubmit={edit ? updateHandler : submitHandler}\r\n              // validation={formData}\r\n              validation={!edit && formData}\r\n              errors={errors}\r\n              setErrors={setErrors}\r\n            >\r\n              <Input\r\n                name=\"title\"\r\n                label=\"Title\"\r\n                value={formData[\"title\"]}\r\n                onChange={handleChange}\r\n                type=\"text\"\r\n                validationHandler={validationHandler}\r\n                error={errors.title}\r\n                required={true}\r\n                size=\"large\"\r\n              />\r\n              <ImageUpload\r\n                name=\"image\"\r\n                label=\"Post Banner Image\"\r\n                // value={formData[\"images\"]}\r\n                onChange={fileChange}\r\n                validationHandler={validationHandler}\r\n                error={errors.image}\r\n                // required={true}\r\n                className=\"btnSuccess\"\r\n                multiple={false}\r\n              />\r\n\r\n              <Button\r\n                title={edit ? \"Update\" : \"Add\"}\r\n                loading={Boolean(isLoading)}\r\n                disabled={Boolean(isLoading)}\r\n                bgColor=\"btnYellow\"\r\n                size=\"small\"\r\n              />\r\n              <Button\r\n                title=\"Cancel\"\r\n                type=\"button\"\r\n                loading={isLoading === 1}\r\n                disabled={isLoading === 1}\r\n                bgColor=\"btnBlack\"\r\n                size=\"small\"\r\n                onClick={closeHandler}\r\n              />\r\n            </FormGroup>\r\n          }\r\n          onClose={closeHandler}\r\n          footer=\"\"\r\n        />\r\n      </div>\r\n    </PrivateLayout>\r\n  );\r\n};\r\n\r\nexport default Category;\r\n"],"names":["_ref","children","name","pageTitle","role","_ref$remove","remove","user","useContext","AuthContext","_jsxs","className","_jsx","Navbar","ToastContainer","Header","title","isLoading","useIsMutating","_useState","useState","_useState2","_slicedToArray","open","setOpen","_useState3","_useState4","edit","setEdit","_useState5","_useState6","formData","setFormData","_useState7","_useState8","errors","setErrors","validationHandler","error","_objectSpread","_defineProperty","data","hooks","useCategory","_hooks$useAddCategory","useAddCategory","mutate","reset","isSuccess","isError","_hooks$useUpdateCateg","useUpdateCategory","update","resetUpdate","isSuccessUpdate","isUpdateError","errorUpdate","_hooks$useDeleteCateg","useDeleteCategory","resetError","isSuccessError","isDeleteError","errorDelete","successAlert","errorAlert","closeHandler","PrivateLayout","type","onClick","Table","columns","field","actions","item","res","swal","text","icon","buttons","dangerMode","then","willDelete","_id","Modal","isVisible","size","content","FormGroup","onSubmit","validation","Input","label","value","onChange","required","ImageUpload","files","file","i","length","URL","createObjectURL","image","multiple","Button","loading","Boolean","disabled","bgColor","onClose","footer"],"sourceRoot":""}