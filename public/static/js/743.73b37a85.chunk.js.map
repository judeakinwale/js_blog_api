{"version":3,"file":"static/js/743.73b37a85.chunk.js","mappings":"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","sources":["layout/index.js","modules/Auth/ForgotPassword.js","../node_modules/@tanstack/react-query/src/useIsMutating.ts"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { Navigation, Footer } from \"../containers\";\r\nimport { AuthContext } from \"../context\";\r\n\r\nconst PageLayout = ({ children }) => {\r\n  const { user } = useContext(AuthContext);\r\n\r\n  const [isNavbarSticky, setIsNavbarSticky] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      const isScrolled = window.scrollY > 0;\r\n      setIsNavbarSticky(isScrolled);\r\n    };\r\n\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n\r\n    // Clean up the event listener on component unmount\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleScroll);\r\n    };\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div className=\"mainContainer\">\r\n        <div className={\"topHeader\"}>\r\n          <Navigation user={user} />\r\n        </div>\r\n\r\n        <ToastContainer />\r\n\r\n        <div className=\"publicContents\">{children}</div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PageLayout;\r\n","import React from \"react\";\r\nimport { hooks } from \"../../hooks\";\r\nimport { errorAlert, successAlert } from \"../../utils\";\r\nimport { ToastContainer } from \"react-toastify\";\r\n\r\nimport { Button, FormGroup, Input } from \"../../containers\";\r\nimport { useIsMutating } from \"@tanstack/react-query\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { AuthContext } from \"../../context\";\r\nimport { useEffect } from \"react\";\r\nimport PageLayout from \"../../layout\";\r\n\r\nconst ForgotPassword = () => {\r\n  const isLoading = useIsMutating();\r\n  const [formData, setFormData] = useState({});\r\n  const [errors, setErrors] = useState({});\r\n  const navigate = useNavigate();\r\n  const handleChange = (name, value) => {\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n  const validationHandler = (name, error) => {\r\n    setErrors({ ...errors, [name]: error });\r\n  };\r\n\r\n  const { mutate, isSuccess, isError, error, reset } =\r\n    hooks.useForgotPassword();\r\n  if (isError) {\r\n    reset();\r\n    errorAlert(error);\r\n  }\r\n  if (isSuccess) {\r\n    reset();\r\n    successAlert(\"Success, Please check your email\");\r\n    setFormData(\"\");\r\n    navigate(\"/login\");\r\n  }\r\n  const submitHandler = () => {\r\n    mutate(formData);\r\n  };\r\n\r\n  const { user } = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      navigate(\"/\");\r\n    }\r\n  }, [user, navigate]);\r\n\r\n  return (\r\n    <PageLayout>\r\n      <div className=\"userLogin\">\r\n        <div className=\"userLoginCont\">\r\n          <div>\r\n            <div className=\"formPadding\">\r\n              <h2>Forgot Password?</h2>\r\n              <br />\r\n              <p>No Worries, We gat you!</p>\r\n              <br />\r\n              {/* <p>Please Enter your Email</p> */}\r\n              <br />\r\n            </div>\r\n            <ToastContainer />\r\n            <div>\r\n              <FormGroup\r\n                onSubmit={submitHandler}\r\n                validation={formData}\r\n                errors={errors}\r\n                setErrors={setErrors}\r\n              >\r\n                <Input\r\n                  name=\"email\"\r\n                  label=\"Email\"\r\n                  value={formData[\"email\"]}\r\n                  onChange={handleChange}\r\n                  type=\"email\"\r\n                  validationHandler={validationHandler}\r\n                  error={errors.email}\r\n                  required={true}\r\n                  size=\"large\"\r\n                />\r\n\r\n                <Button\r\n                  title=\"Forgot Password\"\r\n                  loading={isLoading === 1}\r\n                  disabled={isLoading === 1}\r\n                  size=\"large\"\r\n                  className=\"btnSuccess shadowBtn\"\r\n                />\r\n                {/* <div className=\"formButtonContainer center\">\r\n                  <span>\r\n                    Don't have an account?{\" \"}\r\n                    <Link to=\"/create-account\">Create One</Link>\r\n                  </span>\r\n                </div> */}\r\n              </FormGroup>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </PageLayout>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n","'use client'\nimport * as React from 'react'\nimport { notifyManager, parseMutationFilterArgs } from '@tanstack/query-core'\nimport { useSyncExternalStore } from './useSyncExternalStore'\n\nimport { useQueryClient } from './QueryClientProvider'\nimport type { MutationFilters, MutationKey } from '@tanstack/query-core'\nimport type { ContextOptions } from './types'\n\ninterface Options extends ContextOptions {}\n\nexport function useIsMutating(\n  filters?: MutationFilters,\n  options?: Options,\n): number\nexport function useIsMutating(\n  mutationKey?: MutationKey,\n  filters?: Omit<MutationFilters, 'mutationKey'>,\n  options?: Options,\n): number\nexport function useIsMutating(\n  arg1?: MutationKey | MutationFilters,\n  arg2?: Omit<MutationFilters, 'mutationKey'> | Options,\n  arg3?: Options,\n): number {\n  const [filters, options = {}] = parseMutationFilterArgs(arg1, arg2, arg3)\n\n  const queryClient = useQueryClient({ context: options.context })\n  const mutationCache = queryClient.getMutationCache()\n\n  return useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) =>\n        mutationCache.subscribe(notifyManager.batchCalls(onStoreChange)),\n      [mutationCache],\n    ),\n    () => queryClient.isMutating(filters),\n    () => queryClient.isMutating(filters),\n  )\n}\n"],"names":["_ref","children","user","useContext","AuthContext","_useState","useState","_useState2","_slicedToArray","setIsNavbarSticky","useEffect","handleScroll","isScrolled","window","scrollY","addEventListener","removeEventListener","_jsxs","_Fragment","className","_jsx","Navigation","ToastContainer","Footer","isLoading","useIsMutating","formData","setFormData","_useState3","_useState4","errors","setErrors","navigate","useNavigate","_hooks$useForgotPassw","hooks","useForgotPassword","mutate","isSuccess","isError","error","reset","errorAlert","successAlert","PageLayout","FormGroup","onSubmit","validation","Input","name","label","value","onChange","_objectSpread","_defineProperty","type","validationHandler","email","required","size","Button","title","loading","disabled","arg1","arg2","arg3","_parseMutationFilterA","parseMutationFilterArgs","_parseMutationFilterA2","filters","_parseMutationFilterA3","options","mutationCache","queryClient","getMutationCache","useSyncExternalStore","React","onStoreChange","subscribe","notifyManager","batchCalls","isMutating"],"sourceRoot":""}