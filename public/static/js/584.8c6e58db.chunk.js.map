{"version":3,"file":"static/js/584.8c6e58db.chunk.js","mappings":"8JAyBA,IApBsB,SAAHA,GAMZ,IALLC,EAAQD,EAARC,SACAC,EAAIF,EAAJE,KAEAC,GAFIH,EACJI,KACSJ,EAATG,WAASE,EAAAL,EACTM,OAAAA,OAAM,IAAAD,GAAQA,EAENE,GAASC,EAAAA,EAAAA,YAAWC,EAAAA,GAApBF,KACR,OACEG,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcV,SAAA,EAC3BW,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CAACX,KAAMA,EAAME,KAAU,OAAJG,QAAI,IAAJA,OAAI,EAAJA,EAAMH,QAChCM,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeV,SAAA,EAC5BW,EAAAA,EAAAA,KAACE,EAAAA,GAAc,KACfF,EAAAA,EAAAA,KAACG,EAAAA,GAAM,CAACC,MAAOb,EAAWI,KAAMA,KAChCK,EAAAA,EAAAA,KAAA,OAAKD,UAAWL,EAAS,gBAAkB,WAAWL,SAAEA,SAIhE,C,sJCiNA,UAhOc,WACZ,IAAMgB,GAAYC,EAAAA,EAAAA,KAClBC,GAAwBC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhCI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAAwBL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAhCE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAAgCT,EAAAA,EAAAA,UAAS,CAAC,GAAEU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAA4Bb,EAAAA,EAAAA,UAAS,CAAC,GAAEc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAOlBG,EAAe,SAACnC,EAAMoC,GAC1BN,GAAWO,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIR,GAAQ,IAAAS,EAAAA,EAAAA,GAAA,GAAGtC,EAAOoC,IACrC,EAEMG,EAAoB,SAACvC,EAAMwC,GAC/BN,GAASG,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIJ,GAAM,IAAAK,EAAAA,EAAAA,GAAA,GAAGtC,EAAOwC,IACjC,EAEMC,EAAOC,EAAAA,EAAMC,WACnBC,EAAqDF,EAAAA,EAAMG,cAAnDC,EAAMF,EAANE,OAAQC,EAAKH,EAALG,MAAOC,EAASJ,EAATI,UAAWC,EAAOL,EAAPK,QAAST,EAAKI,EAALJ,MAC3CU,EAMIR,EAAAA,EAAMS,gBALAC,EAAMF,EAAdJ,OACOO,EAAWH,EAAlBH,MACWO,EAAeJ,EAA1BF,UACSO,EAAaL,EAAtBD,QACOO,EAAWN,EAAlBV,MAEFiB,EAMIf,EAAAA,EAAMgB,gBALAtD,EAAMqD,EAAdX,OACOa,EAAUF,EAAjBV,MACWa,EAAcH,EAAzBT,UACSa,EAAaJ,EAAtBR,QACOa,EAAWL,EAAlBjB,MAMEQ,IACFD,IACAzB,GAAQ,IACRyC,EAAAA,EAAAA,IAAa,yBAEXd,IACFF,KACAiB,EAAAA,EAAAA,IAAWxB,IAETc,IACFD,IACA/B,GAAQ,IACRyC,EAAAA,EAAAA,IAAa,yBAEXR,IACFF,KACAW,EAAAA,EAAAA,IAAWR,IAETI,IACFD,KACAI,EAAAA,EAAAA,IAAa,yBAEXF,IACFF,KACAK,EAAAA,EAAAA,IAAWF,IAEb,IASMG,EAAe,WACnB3C,GAAQ,EACV,EA6BA,OACEZ,EAAAA,EAAAA,KAACwD,EAAAA,EAAa,CAAClE,KAAK,QAAQC,UAAU,QAAOF,UAC3CS,EAAAA,EAAAA,MAAA,OAAKC,UAAU,UAASV,SAAA,EACtBW,EAAAA,EAAAA,KAAA,OAAKD,UAAU,qBAAoBV,UACjCW,EAAAA,EAAAA,KAAA,UACEyD,KAAK,SACL1D,UAAU,2BACV2D,QA3CU,WAClB9C,GAAQ,GACRQ,EAAY,IACZJ,GAAQ,EACV,EAuC+B3B,SACtB,iBAIHW,EAAAA,EAAAA,KAAC2D,EAAAA,GAAK,CAACC,QAhHG,CACd,CAAExD,MAAO,OAAQyD,MAAO,YACxB,CAAEzD,MAAO,QAASyD,MAAO,SACzB,CAAEzD,MAAO,QAASyD,MAAO,UA6GI9B,KAAMA,EAAM+B,QAvC3B,SAACC,GAAI,MAAK,CACxB,CACEzE,KAAM,OACNoE,QAAS,SAACM,GACR5C,EAAY4C,GACZpD,GAAQ,GACRI,GAAQ,EACV,GAEF,CACE1B,KAAM,SACNoE,QAAS,SAACM,GACRC,IAAK,CACH7D,MAAO,gBACP8D,KAAM,qDACNC,KAAM,UACNC,QAAS,CAAC,KAAM,OAChBC,YAAY,IACXC,MAAK,SAACC,GACHA,GACF7E,EAAOsE,EAAIQ,IAEf,GACF,GAEF,KAeIxE,EAAAA,EAAAA,KAACyE,EAAAA,GAAK,CACJC,UAAW/D,EACXP,MAAOW,EAAO,aAAe,eAC7B4D,KAAK,KACLC,SACE9E,EAAAA,EAAAA,MAAC+E,EAAAA,GAAS,CACRC,SAAU/D,EA3DA,WACpB2B,EAAOvB,EACT,EA/BsB,WACpBiB,EAAOjB,EACT,EAwFY4D,YAAahE,GAAQI,EACrBI,OAAQA,EACRC,UAAWA,EAAUnC,SAAA,EAErBW,EAAAA,EAAAA,KAACgF,EAAAA,GAAK,CACJ1F,KAAK,YACL2F,MAAM,aACNvD,MAAOP,EAAoB,UAC3B+D,SAAUzD,EACVgC,KAAK,OACL5B,kBAAmBA,EACnBC,MAAOP,EAAO4D,UACdC,UAAU,EACVT,KAAK,WAEP3E,EAAAA,EAAAA,KAACgF,EAAAA,GAAK,CACJ1F,KAAK,WACL2F,MAAM,YACNvD,MAAOP,EAAmB,SAC1B+D,SAAUzD,EACVgC,KAAK,OACL5B,kBAAmBA,EACnBC,MAAOP,EAAO8D,SACdD,UAAU,EACVT,KAAK,WAEP3E,EAAAA,EAAAA,KAACgF,EAAAA,GAAK,CACJ1F,KAAK,QACL2F,MAAM,gBACNvD,MAAOP,EAAgB,MACvB+D,SAAUzD,EACVgC,KAAK,QACL5B,kBAAmBA,EACnBC,MAAOP,EAAO+D,MACdF,UAAU,EACVT,KAAK,WAEP3E,EAAAA,EAAAA,KAACgF,EAAAA,GAAK,CACJ1F,KAAK,QACL2F,MAAM,QACNvD,MAAOP,EAAgB,MACvB+D,SAAUzD,EACVgC,KAAK,SACL5B,kBAAmBA,EACnBC,MAAOP,EAAOgE,MACdH,UAAU,EACVT,KAAK,WAGP3E,EAAAA,EAAAA,KAACgF,EAAAA,GAAK,CACJ1F,KAAK,WACL2F,MAAM,WACNvD,MAAOP,EAAmB,SAC1B+D,SAAUzD,EACVgC,KAAK,WACL5B,kBAAmBA,EACnBC,MAAOP,EAAOiE,SACdJ,UAAU,EACVT,KAAK,WAEP3E,EAAAA,EAAAA,KAACgF,EAAAA,GAAK,CACJ1F,KAAK,kBACL2F,MAAM,mBACNvD,MAAOP,EAA0B,gBACjC+D,SAAUzD,EACVgC,KAAK,WACL5B,kBAAmBA,EACnBC,MAAOP,EAAOkE,gBACdL,UAAU,EACVT,KAAK,WAEP3E,EAAAA,EAAAA,KAAC0F,EAAAA,GAAM,CACLtF,MAAOW,EAAO,SAAW,MACzB4E,QAASC,QAAQvF,GACjBwF,SAAUD,QAAQvF,GAClByF,QAAQ,YACRnB,KAAK,WAEP3E,EAAAA,EAAAA,KAAC0F,EAAAA,GAAM,CACLtF,MAAM,SACNqD,KAAK,SACLkC,QAAuB,IAAdtF,EACTwF,SAAwB,IAAdxF,EACVyF,QAAQ,WACRnB,KAAK,QACLjB,QAASH,OAIfwC,QAASxC,EACTyC,OAAO,SAKjB,C","sources":["layout/Private.js","modules/Admin/Admin/index.js"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { Header, Navbar } from \"../containers\";\r\nimport { AuthContext } from \"../context\";\r\n\r\nconst PrivateLayout = ({\r\n  children,\r\n  name,\r\n  role = \"Admin\",\r\n  pageTitle,\r\n  remove = false,\r\n}) => {\r\n  const { user } = useContext(AuthContext);\r\n  return (\r\n    <div className=\"appContainer\">\r\n      <Navbar name={name} role={user?.role} />\r\n      <div className=\"contentsRight\">\r\n        <ToastContainer />\r\n        <Header title={pageTitle} user={user} />\r\n        <div className={remove ? \"removePadding\" : \"contents\"}>{children}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrivateLayout;\r\n","import React, { useState } from \"react\";\r\nimport PrivateLayout from \"../../../layout/Private\";\r\nimport { hooks } from \"../../../hooks\";\r\nimport { Button, FormGroup, Input, Modal, Table } from \"../../../containers\";\r\nimport swal from \"sweetalert\";\r\nimport { useIsMutating } from \"@tanstack/react-query\";\r\nimport { errorAlert, successAlert } from \"../../../utils\";\r\n\r\nconst Admin = () => {\r\n  const isLoading = useIsMutating();\r\n  const [open, setOpen] = useState(false);\r\n  const [edit, setEdit] = useState(false);\r\n  const [formData, setFormData] = useState({});\r\n  const [errors, setErrors] = useState({});\r\n  const Columns = [\r\n    { title: \"Name\", field: \"fullname\" },\r\n    { title: \"Email\", field: \"email\" },\r\n    { title: \"Phone\", field: \"phone\" },\r\n  ];\r\n\r\n  const handleChange = (name, value) => {\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const validationHandler = (name, error) => {\r\n    setErrors({ ...errors, [name]: error });\r\n  };\r\n\r\n  const data = hooks.useUsers();\r\n  const { mutate, reset, isSuccess, isError, error } = hooks.useRegister();\r\n  const {\r\n    mutate: update,\r\n    reset: resetUpdate,\r\n    isSuccess: isSuccessUpdate,\r\n    isError: isUpdateError,\r\n    error: errorUpdate,\r\n  } = hooks.useUpdateUser();\r\n  const {\r\n    mutate: remove,\r\n    reset: resetError,\r\n    isSuccess: isSuccessError,\r\n    isError: isDeleteError,\r\n    error: errorDelete,\r\n  } = hooks.useDeleteUser();\r\n\r\n  const submitHandler = () => {\r\n    mutate(formData);\r\n  };\r\n  if (isSuccess) {\r\n    reset();\r\n    setOpen(false);\r\n    successAlert(\"Created Successfully\");\r\n  }\r\n  if (isError) {\r\n    reset();\r\n    errorAlert(error);\r\n  }\r\n  if (isSuccessUpdate) {\r\n    resetUpdate();\r\n    setOpen(false);\r\n    successAlert(\"Updated Successfully\");\r\n  }\r\n  if (isUpdateError) {\r\n    resetUpdate();\r\n    errorAlert(errorUpdate);\r\n  }\r\n  if (isSuccessError) {\r\n    resetError();\r\n    successAlert(\"Deleted Successfully\");\r\n  }\r\n  if (isDeleteError) {\r\n    resetError();\r\n    errorAlert(errorDelete);\r\n  }\r\n  const updateHandler = () => {\r\n    update(formData);\r\n  };\r\n\r\n  const openHandler = () => {\r\n    setOpen(true);\r\n    setFormData(\"\");\r\n    setEdit(false);\r\n  };\r\n  const closeHandler = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const actions = (item) => [\r\n    {\r\n      name: \"Edit\",\r\n      onClick: (res) => {\r\n        setFormData(res);\r\n        setOpen(true);\r\n        setEdit(true);\r\n      },\r\n    },\r\n    {\r\n      name: \"Delete\",\r\n      onClick: (res) => {\r\n        swal({\r\n          title: \"Are you sure?\",\r\n          text: \"Once deleted, you will not be able to recover this\",\r\n          icon: \"warning\",\r\n          buttons: [\"No\", \"Yes\"],\r\n          dangerMode: true,\r\n        }).then((willDelete) => {\r\n          if (willDelete) {\r\n            remove(res._id);\r\n          }\r\n        });\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <PrivateLayout name=\"Admin\" pageTitle=\"Admin\">\r\n      <div className=\"bgWhite\">\r\n        <div className=\"btnContainer right\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btnSuccess shadowBtn\"\r\n            onClick={openHandler}\r\n          >\r\n            Add Admin\r\n          </button>\r\n        </div>\r\n        <Table columns={Columns} data={data} actions={actions} />\r\n        <Modal\r\n          isVisible={open}\r\n          title={edit ? \"Edit Admin\" : \"Create Admin\"}\r\n          size=\"md\"\r\n          content={\r\n            <FormGroup\r\n              onSubmit={edit ? updateHandler : submitHandler}\r\n              // validation={formData}\r\n              validation={!edit && formData}\r\n              errors={errors}\r\n              setErrors={setErrors}\r\n            >\r\n              <Input\r\n                name=\"firstname\"\r\n                label=\"First Name\"\r\n                value={formData[\"firstname\"]}\r\n                onChange={handleChange}\r\n                type=\"text\"\r\n                validationHandler={validationHandler}\r\n                error={errors.firstname}\r\n                required={true}\r\n                size=\"large\"\r\n              />\r\n              <Input\r\n                name=\"lastname\"\r\n                label=\"Last Name\"\r\n                value={formData[\"lastname\"]}\r\n                onChange={handleChange}\r\n                type=\"text\"\r\n                validationHandler={validationHandler}\r\n                error={errors.lastname}\r\n                required={true}\r\n                size=\"large\"\r\n              />\r\n              <Input\r\n                name=\"email\"\r\n                label=\"Email Address\"\r\n                value={formData[\"email\"]}\r\n                onChange={handleChange}\r\n                type=\"email\"\r\n                validationHandler={validationHandler}\r\n                error={errors.email}\r\n                required={true}\r\n                size=\"large\"\r\n              />\r\n              <Input\r\n                name=\"phone\"\r\n                label=\"Phone\"\r\n                value={formData[\"phone\"]}\r\n                onChange={handleChange}\r\n                type=\"number\"\r\n                validationHandler={validationHandler}\r\n                error={errors.phone}\r\n                required={true}\r\n                size=\"large\"\r\n              />\r\n\r\n              <Input\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                value={formData[\"password\"]}\r\n                onChange={handleChange}\r\n                type=\"password\"\r\n                validationHandler={validationHandler}\r\n                error={errors.password}\r\n                required={true}\r\n                size=\"large\"\r\n              />\r\n              <Input\r\n                name=\"confirmPassword\"\r\n                label=\"Confirm Password\"\r\n                value={formData[\"confirmPassword\"]}\r\n                onChange={handleChange}\r\n                type=\"password\"\r\n                validationHandler={validationHandler}\r\n                error={errors.confirmPassword}\r\n                required={true}\r\n                size=\"large\"\r\n              />\r\n              <Button\r\n                title={edit ? \"Update\" : \"Add\"}\r\n                loading={Boolean(isLoading)}\r\n                disabled={Boolean(isLoading)}\r\n                bgColor=\"btnYellow\"\r\n                size=\"small\"\r\n              />\r\n              <Button\r\n                title=\"Cancel\"\r\n                type=\"button\"\r\n                loading={isLoading === 1}\r\n                disabled={isLoading === 1}\r\n                bgColor=\"btnBlack\"\r\n                size=\"small\"\r\n                onClick={closeHandler}\r\n              />\r\n            </FormGroup>\r\n          }\r\n          onClose={closeHandler}\r\n          footer=\"\"\r\n        />\r\n      </div>\r\n    </PrivateLayout>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n"],"names":["_ref","children","name","pageTitle","role","_ref$remove","remove","user","useContext","AuthContext","_jsxs","className","_jsx","Navbar","ToastContainer","Header","title","isLoading","useIsMutating","_useState","useState","_useState2","_slicedToArray","open","setOpen","_useState3","_useState4","edit","setEdit","_useState5","_useState6","formData","setFormData","_useState7","_useState8","errors","setErrors","handleChange","value","_objectSpread","_defineProperty","validationHandler","error","data","hooks","useUsers","_hooks$useRegister","useRegister","mutate","reset","isSuccess","isError","_hooks$useUpdateUser","useUpdateUser","update","resetUpdate","isSuccessUpdate","isUpdateError","errorUpdate","_hooks$useDeleteUser","useDeleteUser","resetError","isSuccessError","isDeleteError","errorDelete","successAlert","errorAlert","closeHandler","PrivateLayout","type","onClick","Table","columns","field","actions","item","res","swal","text","icon","buttons","dangerMode","then","willDelete","_id","Modal","isVisible","size","content","FormGroup","onSubmit","validation","Input","label","onChange","firstname","required","lastname","email","phone","password","confirmPassword","Button","loading","Boolean","disabled","bgColor","onClose","footer"],"sourceRoot":""}