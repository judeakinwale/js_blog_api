{"version":3,"file":"static/js/808.ef115b37.chunk.js","mappings":"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","sources":["webpack://lbanblog/./src/modules/Auth/styles.module.css?3297","modules/Auth/Login.js","../node_modules/@tanstack/react-query/src/useIsMutating.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loginContainer\":\"styles_loginContainer__SphGr\",\"removeBg\":\"styles_removeBg__XU51g\",\"scrollContainer\":\"styles_scrollContainer__EhYXy\",\"container\":\"styles_container__64c3k\",\"imgContainer\":\"styles_imgContainer__7ur4+\",\"slideBg\":\"styles_slideBg__jIRgd\",\"formContainer\":\"styles_formContainer__PrDx8\",\"formMainContainer\":\"styles_formMainContainer__f9Z8-\",\"logo\":\"styles_logo__ehmxa\",\"formPadding\":\"styles_formPadding__owiEP\",\"check\":\"styles_check__k3LPq\",\"bg\":\"styles_bg__RWyno\",\"flexContainer\":\"styles_flexContainer__ZHG1a\",\"forgotContainer\":\"styles_forgotContainer__SUi80\",\"circle\":\"styles_circle__Ok34G\"};","import React from \"react\";\r\nimport { hooks } from \"../../hooks\";\r\nimport { errorAlert, successAlert } from \"../../utils\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport styles from \"./styles.module.css\";\r\nimport { Button, FormGroup, Input, PasswordInput } from \"../../containers\";\r\nimport { useIsMutating } from \"@tanstack/react-query\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { AuthContext } from \"../../context\";\r\nimport { useEffect } from \"react\";\r\nimport { PublicPaths } from \"../../routes/path\";\r\nimport logo from \"../../assets/logo2.png\";\r\nconst Login = () => {\r\n  const isLoading = useIsMutating();\r\n  const [formData, setFormData] = useState({});\r\n  const [errors, setErrors] = useState({});\r\n  const navigate = useNavigate();\r\n  const handleChange = (name, value) => {\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n  const validationHandler = (name, error) => {\r\n    setErrors({ ...errors, [name]: error });\r\n  };\r\n\r\n  const { mutate, isSuccess, isError, error, reset } = hooks.useLogin();\r\n  if (isError) {\r\n    reset();\r\n    errorAlert(error);\r\n  }\r\n  if (isSuccess) {\r\n    reset();\r\n    successAlert(\"Login Successful\");\r\n    setFormData(\"\");\r\n    navigate(\"/app/dashboard\");\r\n  }\r\n  const submitHandler = () => {\r\n    mutate(formData);\r\n  };\r\n\r\n  const { user } = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      navigate(\"/app/dashboard\");\r\n    }\r\n  }, [user, navigate]);\r\n\r\n  return (\r\n    <div className={styles.loginContainer}>\r\n      <div className={styles.scrollContainer}>\r\n        <div className={styles.container}>\r\n          <div className={styles.imgContainer}></div>\r\n          <h1>Lotus Beta Analytics</h1>\r\n          <p>Admin Portal</p>\r\n        </div>\r\n        <ToastContainer />\r\n      </div>\r\n      <div className={styles.formContainer}>\r\n        <div className={styles.formMainContainer}>\r\n          <div className={styles.formPadding}>\r\n            <div className={styles.logo}>\r\n              <img src={logo} alt=\"paylogue\" />\r\n            </div>\r\n          </div>\r\n          <div className={styles.form}>\r\n            <FormGroup\r\n              onSubmit={submitHandler}\r\n              validation={formData}\r\n              errors={errors}\r\n              setErrors={setErrors}\r\n            >\r\n              <Input\r\n                name=\"email\"\r\n                label=\"Email\"\r\n                value={formData[\"email\"]}\r\n                onChange={handleChange}\r\n                // type=\"email\"\r\n                validationHandler={validationHandler}\r\n                error={errors.email}\r\n                required={true}\r\n                size=\"large\"\r\n              />\r\n              <PasswordInput\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                value={formData[\"password\"]}\r\n                onChange={handleChange}\r\n                type=\"password\"\r\n                validationHandler={validationHandler}\r\n                error={errors.password}\r\n                required={true}\r\n                size=\"large\"\r\n              />\r\n              {/* <div className={`${styles.formPadding}`}>\r\n                <div\r\n                  className={`${styles.formButtonContainer} ${styles.medium}`}\r\n                >\r\n                  <Link to={PublicPaths.FORGOT_PASSWORD}>Forgot Password?</Link>\r\n                </div>\r\n              </div> */}\r\n\r\n              <Button\r\n                title=\"Login\"\r\n                loading={Boolean(isLoading)}\r\n                disabled={Boolean(isLoading)}\r\n                size=\"large\"\r\n                className=\"btnPurple shadowBtn\"\r\n              />\r\n              <div className={`${styles.formPadding}`}>\r\n                {/* <div\r\n                  className={`${styles.formButtonContainer} ${styles.center}`}\r\n                >\r\n                  <span>\r\n                    Don't have an account?{\" \"}\r\n                    <Link to={PublicPaths.REGISTER}>Create One</Link>\r\n                  </span>\r\n                </div> */}\r\n              </div>\r\n            </FormGroup>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","'use client'\nimport * as React from 'react'\nimport { notifyManager, parseMutationFilterArgs } from '@tanstack/query-core'\nimport { useSyncExternalStore } from './useSyncExternalStore'\n\nimport { useQueryClient } from './QueryClientProvider'\nimport type { MutationFilters, MutationKey } from '@tanstack/query-core'\nimport type { ContextOptions } from './types'\n\ninterface Options extends ContextOptions {}\n\nexport function useIsMutating(\n  filters?: MutationFilters,\n  options?: Options,\n): number\nexport function useIsMutating(\n  mutationKey?: MutationKey,\n  filters?: Omit<MutationFilters, 'mutationKey'>,\n  options?: Options,\n): number\nexport function useIsMutating(\n  arg1?: MutationKey | MutationFilters,\n  arg2?: Omit<MutationFilters, 'mutationKey'> | Options,\n  arg3?: Options,\n): number {\n  const [filters, options = {}] = parseMutationFilterArgs(arg1, arg2, arg3)\n\n  const queryClient = useQueryClient({ context: options.context })\n  const mutationCache = queryClient.getMutationCache()\n\n  return useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) =>\n        mutationCache.subscribe(notifyManager.batchCalls(onStoreChange)),\n      [mutationCache],\n    ),\n    () => queryClient.isMutating(filters),\n    () => queryClient.isMutating(filters),\n  )\n}\n"],"names":["isLoading","useIsMutating","_useState","useState","_useState2","_slicedToArray","formData","setFormData","_useState3","_useState4","errors","setErrors","navigate","useNavigate","handleChange","name","value","_objectSpread","_defineProperty","validationHandler","error","_hooks$useLogin","hooks","useLogin","mutate","isSuccess","isError","reset","errorAlert","successAlert","user","useContext","AuthContext","useEffect","_jsxs","className","styles","loginContainer","children","scrollContainer","container","_jsx","imgContainer","ToastContainer","formContainer","formMainContainer","formPadding","logo","src","alt","form","FormGroup","onSubmit","validation","Input","label","onChange","email","required","size","PasswordInput","type","password","Button","title","loading","Boolean","disabled","concat","arg1","arg2","arg3","_parseMutationFilterA","parseMutationFilterArgs","_parseMutationFilterA2","filters","_parseMutationFilterA3","options","mutationCache","queryClient","getMutationCache","useSyncExternalStore","React","onStoreChange","subscribe","notifyManager","batchCalls","isMutating"],"sourceRoot":""}