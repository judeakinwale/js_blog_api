{"version":3,"file":"static/js/497.ba4311ac.chunk.js","mappings":"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","sources":["layout/Private.js","modules/Admin/Posts/Edit.js"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { Header, Navbar } from \"../containers\";\r\nimport { AuthContext } from \"../context\";\r\n\r\nconst PrivateLayout = ({\r\n  children,\r\n  name,\r\n  role = \"Admin\",\r\n  pageTitle,\r\n  remove = false,\r\n}) => {\r\n  const { user } = useContext(AuthContext);\r\n  return (\r\n    <div className=\"appContainer\">\r\n      <Navbar name={name} role={user?.role} />\r\n      <div className=\"contentsRight\">\r\n        <ToastContainer />\r\n        <Header title={pageTitle} user={user} />\r\n        <div className={remove ? \"removePadding\" : \"contents\"}>{children}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrivateLayout;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport PrivateLayout from \"../../../layout/Private\";\r\nimport { hooks } from \"../../../hooks\";\r\nimport {\r\n  Button,\r\n  FormGroup,\r\n  ImageUpload,\r\n  Input,\r\n  MultiSelect,\r\n  Select,\r\n} from \"../../../containers\";\r\nimport { useIsMutating } from \"@tanstack/react-query\";\r\nimport { errorAlert, successAlert } from \"../../../utils\";\r\nimport { Link, useLocation, useNavigate, useParams } from \"react-router-dom\";\r\n\r\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\r\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\r\n\r\nconst EditPost = () => {\r\n  const isLoading = useIsMutating();\r\n  const [formData, setFormData] = useState({});\r\n  const [errors, setErrors] = useState({});\r\n  const [pictures, setPictures] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const { id } = useParams();\r\n\r\n  const handleChange = (name, value) => {\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const validationHandler = (name, error) => {\r\n    setErrors({ ...errors, [name]: error });\r\n  };\r\n\r\n  const data = hooks.useCategory();\r\n  const post = hooks.usePost();\r\n  const postInfo = post?.find((x) => x._id === id);\r\n  const { mutate, reset, isSuccess, isError, error } = hooks.useUpdatePost();\r\n\r\n  const submitHandler = () => {\r\n    mutate(formData);\r\n  };\r\n  if (isSuccess) {\r\n    reset();\r\n    successAlert(\"Created Successfully\");\r\n    navigate(\"/posts\");\r\n  }\r\n  if (isError) {\r\n    reset();\r\n    errorAlert(error);\r\n  }\r\n\r\n  const fileChange = (name, files) => {\r\n    let file = \"\";\r\n    let pix = [];\r\n    for (var i = 0; i < files?.length; i++) {\r\n      file = files[i];\r\n      const objectUrl = URL.createObjectURL(files[i]);\r\n      pix = objectUrl;\r\n    }\r\n\r\n    setFormData({ ...formData, [name]: file });\r\n    setPictures(pix);\r\n  };\r\n\r\n  useEffect(() => {\r\n    function removeHTMLTags(htmlString) {\r\n      const doc = new DOMParser().parseFromString(htmlString, \"text/html\");\r\n      return doc.body.textContent || \"\";\r\n    }\r\n    if (postInfo) {\r\n      setFormData({\r\n        ...postInfo,\r\n        content: removeHTMLTags(postInfo?.content),\r\n      });\r\n    }\r\n  }, [postInfo]);\r\n\r\n  const handleEditorDataChange = (event, editor) => {\r\n    const data = editor.getData();\r\n\r\n    setFormData((prevFormData) => ({\r\n      ...prevFormData,\r\n      content: data,\r\n    }));\r\n  };\r\n  return (\r\n    <PrivateLayout name=\"Posts\" pageTitle=\"Posts\">\r\n      <div className=\"contents bgWhite\">\r\n        <div className=\"btnContainer right\">\r\n          <Link to=\"/app/posts/\" className=\"btn btnSuccess shadowBtn\">\r\n            Go Back\r\n          </Link>\r\n        </div>\r\n        <FormGroup\r\n          onSubmit={submitHandler}\r\n          // validation={formData}\r\n          validation={formData}\r\n          errors={errors}\r\n          setErrors={setErrors}\r\n        >\r\n          <Input\r\n            name=\"title\"\r\n            label=\"Title\"\r\n            value={formData[\"title\"]}\r\n            onChange={handleChange}\r\n            type=\"text\"\r\n            validationHandler={validationHandler}\r\n            error={errors.title}\r\n            required={true}\r\n            size=\"large\"\r\n          />\r\n          <MultiSelect\r\n            name=\"categories\"\r\n            label=\"Post Category\"\r\n            value={formData[\"categories\"]}\r\n            onChange={handleChange}\r\n            validationHandler={validationHandler}\r\n            error={errors.categories}\r\n            required={true}\r\n            data={data}\r\n            filter=\"title\"\r\n            filterValue=\"_id\"\r\n          />\r\n          <Select\r\n            name=\"type\"\r\n            label=\"Post Type\"\r\n            value={formData[\"type\"]}\r\n            onChange={handleChange}\r\n            type=\"text\"\r\n            validationHandler={validationHandler}\r\n            error={errors.type}\r\n            required={true}\r\n            data={[\r\n              { name: \"Featured\", value: \"featured\" },\r\n              { name: \"Alert\", value: \"alert\" },\r\n              { name: \"Headline\", value: \"headline\" },\r\n              { name: \"Post\", value: \"post\" },\r\n            ]}\r\n          />\r\n\r\n          <div className=\"editorContainer\">\r\n            <label style={{ fontSize: \"14px\", marginBottom: \"0.5rem\" }}>\r\n              Post Content\r\n            </label>\r\n            <div className=\"editor\">\r\n              <CKEditor\r\n                editor={ClassicEditor}\r\n                data={formData[\"content\"]}\r\n                onChange={handleEditorDataChange}\r\n              />\r\n            </div>\r\n          </div>\r\n          <Input\r\n            name=\"author\"\r\n            label=\"Author\"\r\n            value={formData[\"author\"]}\r\n            onChange={handleChange}\r\n            type=\"text\"\r\n            validationHandler={validationHandler}\r\n            error={errors.author}\r\n            required={true}\r\n          />\r\n          <ImageUpload\r\n            name=\"images\"\r\n            label=\"Post Banner Image\"\r\n            // value={formData[\"images\"]}\r\n            onChange={fileChange}\r\n            validationHandler={validationHandler}\r\n            error={errors.images}\r\n            // required={true}\r\n            className=\"btnSuccess\"\r\n            multiple={false}\r\n          />\r\n          {pictures && (\r\n            <div className=\"pix\">\r\n              <div className=\"title\">Uploaded Picture</div>\r\n              <div className=\"pixFlex\">\r\n                <img src={pictures} alt=\"products\" />\r\n              </div>\r\n            </div>\r\n          )}\r\n          <Button\r\n            title={\"Create Post\"}\r\n            loading={Boolean(isLoading)}\r\n            disabled={Boolean(isLoading)}\r\n            bgColor=\"btnYellow\"\r\n            size=\"small\"\r\n          />\r\n        </FormGroup>\r\n      </div>\r\n    </PrivateLayout>\r\n  );\r\n};\r\n\r\nexport default EditPost;\r\n"],"names":["_ref","children","name","pageTitle","role","_ref$remove","remove","user","useContext","AuthContext","_jsxs","className","_jsx","Navbar","ToastContainer","Header","title","isLoading","useIsMutating","_useState","useState","_useState2","_slicedToArray","formData","setFormData","_useState3","_useState4","errors","setErrors","_useState5","_useState6","pictures","setPictures","navigate","useNavigate","id","useParams","handleChange","value","_objectSpread","_defineProperty","validationHandler","error","data","hooks","useCategory","post","usePost","postInfo","find","x","_id","_hooks$useUpdatePost","useUpdatePost","mutate","reset","isSuccess","isError","successAlert","errorAlert","useEffect","htmlString","content","DOMParser","parseFromString","body","textContent","PrivateLayout","Link","to","FormGroup","onSubmit","validation","Input","label","onChange","type","required","size","MultiSelect","categories","filter","filterValue","Select","style","fontSize","marginBottom","CKEditor","editor","ClassicEditor","event","getData","prevFormData","author","ImageUpload","files","file","pix","i","length","URL","createObjectURL","images","multiple","src","alt","Button","loading","Boolean","disabled","bgColor"],"sourceRoot":""}